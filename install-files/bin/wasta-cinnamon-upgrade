#!/bin/bash

# ==============================================================================
# wasta-cinnamon-upgrade: Provide standard way for users to upgrade Cinnamon
#   to a newer version (using Wasta Cinnamon PPAs)
#
#   2017-11-22 rik: Initial script
#   2018-05-20 rik: updating for Cinnamon 3.8
#   2018-05-21 rik: removing wasta-testing PPA (was active for 18.04 Alpha)
#   2018-08-31 rik: installing (no-recommends) thunar for bulk-rename-tool
#   2019-02-23 rik: updating for Cinnamon 4.0
#
# ==============================================================================

# ------------------------------------------------------------------------------
# Check to ensure running as root
# ------------------------------------------------------------------------------
#   No fancy "double click" here because normal user should never need to run
if [ $(id -u) -ne 0 ]
then
    echo
    echo "You must run this script with sudo." >&2
    echo "Exiting...."
    sleep 5s
    exit 1
fi

# ------------------------------------------------------------------------------
# Initial Setup
# ------------------------------------------------------------------------------

DIR=/usr/share/wasta-cinnamon

SERIES=$(lsb_release -sc)

# if 'auto' parameter passed, run non-interactively
if [ "$1" == "auto" ];
then
    AUTO="auto"
    
    # needed for apt-get
    YES="--yes"
    DEBIAN_NONINTERACTIVE="DEBIAN_FRONTEND=noninteractive"
    
    # needed for gdebi
    INTERACTIVE="-n"
else
    AUTO=""
    YES=""
    DEBIAN_NONINTERACTIVE=""
    INTERACTIVE=""
fi

# ------------------------------------------------------------------------------
# Initial prompt
# ------------------------------------------------------------------------------
echo
echo "========================================================================="
echo "=== Wasta-Linux Cinnamon Upgrade ========================================"
echo "========================================================================="
echo
echo "This script will upgrade Cinnamon to a version provided by Wasta-Linux"
echo "Cinnamon PPAs"
echo
echo "!!!Make sure Wasta-Offline is running if you want to use it!!!"
echo
if ! [ "$AUTO" ];
then
    echo "Close this window if you do not want to run this script."
    echo
    read -p "Press <Enter> to continue..."
fi

# ------------------------------------------------------------------------------
# Configure apt sources
# ------------------------------------------------------------------------------
echo
echo "*** Making adjustments to software repository sources"
echo

APT_SOURCES=/etc/apt/sources.list

if ! [ -e $APT_SOURCES.wasta ];
then
    APT_SOURCES_D=/etc/apt/sources.list.d
else
    # wasta-offline active: adjust apt file locations
    echo
    echo "*** wasta-offline active, applying repository adjustments to /etc/apt/sources.list.wasta"
    echo
    APT_SOURCES=/etc/apt/sources.list.wasta
    if [ "$(ls -A /etc/apt/sources.list.d)" ];
    then
        echo
        echo "*** wasta-offline 'offline and internet' mode detected"
        echo
        # files inside /etc/apt/sources.list.d so it is active
        # wasta-offline "offline and internet mode": no change to sources.list.d
        APT_SOURCES_D=/etc/apt/sources.list.d
    else
        echo
        echo "*** wasta-offline 'offline only' mode detected"
        echo
        # no files inside /etc/apt/sources.list.d
        # wasta-offline "offline only mode": change to sources.list.d.wasta
        APT_SOURCES_D=/etc/apt/sources.list.d.wasta
    fi
fi

# add Wasta-Linux Cinnamon 4.0 PPA
PPA_FILE="$APT_SOURCES_D/wasta-linux-ubuntu-cinnamon-4-0-$SERIES.list"
if ! [ -e $PPA_FILE ];
then
    echo
    echo "*** Adding Cinnamon 4.0 PPA"
    echo

    echo "deb http://ppa.launchpad.net/wasta-linux/cinnamon-4-0/ubuntu $SERIES main" | \
        tee $PPA_FILE
    echo "# deb-src http://ppa.launchpad.net/wasta-linux/cinnamon-4-0/ubuntu $SERIES main" | \
        tee -a $PPA_FILE
else
    # found, but ensure Wasta-Linux Cinnamon 4.0 PPA ACTIVE (user could have accidentally disabled)
    # DO NOT match any lines ending in #wasta
    sed -i -e '/#wasta$/! s@.*\(deb http://ppa.launchpad.net\)@\1@' $PPA_FILE
fi

# remove older PPAs
rm -f $APT_SOURCES_D/wasta-linux-ubuntu-cinnamon-3-6*
rm -f $APT_SOURCES_D/wasta-linux-ubuntu-cinnamon-3-8*

# ------------------------------------------------------------------------------
# Perform dist-upgrade
# ------------------------------------------------------------------------------
echo
echo "*** Updating lists of available software"
echo
apt-get update

echo
echo "*** Upgrading all installed software"
echo
$DEBIAN_NONINTERACTIVE apt-get $YES dist-upgrade

echo
echo "*** Removing any previous version of wasta-cinnamon-layout"
echo

# 2016-05-04 rik: if attempting to remove a package that doesn't exist (such
#   as can happen when using wasta-offline "offline only mode") apt-get purge
#   will error and not remove anything.  So instead found this way to do it:
#       http://superuser.com/questions/518859/ignore-packages-that-are-not-currently-installed-when-using-apt-get-remove
pkgToRemoveListFull="\
    wasta-cinnamon-layout-3-6 \
    wasta-cinnamon-layout-3-8"

pkgToRemoveList=""
for pkgToRemove in $(echo $pkgToRemoveListFull); do
  $(dpkg --status $pkgToRemove &> /dev/null)
  if [[ $? -eq 0 ]]; then
    pkgToRemoveList="$pkgToRemoveList $pkgToRemove"
  fi
done

$DEBIAN_NONINTERACTIVE apt-get $YES purge $pkgToRemoveList

echo
echo "*** Ensuring newest wasta-cinnamon-layout installed"
echo

$DEBIAN_NONINTERACTIVE apt-get $YES install wasta-cinnamon-layout-4-0

# TODO: migrate ITM to GWL: check times and migrate (from wasta-layout script)
# migrate all users from ITM to GWL
# have wasta-layout (user level) use gsettings OR local gschema-override so don't need to rely on system default
#   and then when system level set it doesn't automatically adjust any existing users, it is just there for
#   when wasta-reset is used OR for new users.

for CINN_SETTINGS in /home/*/.cinnamon;
do
    # get user, chown after copy of ITM to GWL or run command(s) as user
    CINN_OWNER=$(stat -c '%U' "$CINN_SETTINGS")
    echo
    echo "*** Ensuring user's cinnamon configs up-to-date: $CINN_OWNER"
    echo

    ITM_FILE=$CINN_SETTINGS/configs/IcingTaskManager@json/115.json
    if [ -e "$ITM_FILE" ];
    then
        ITM_PINNED_APPS=$(jq -c '.["pinned-apps"].value' < $ITM_FILE)
    fi

    # most likely will not exist, but will get created below.
    GWL_FILE=$CINN_SETTINGS/configs/grouped-window-list@cinnamon.org/120.json
    if [ -e "$GWL_FILE" ];
    then
        GWL_PINNED_APPS=$(jq -c '.["pinned-apps"].value' < $GWL_FILE)
    fi

    # migration from ITM to GWL
    if [ "$ITM_FILE" -nt "$GWL_FILE" ];
    then
        echo
        echo "*** Migrating ITM Pinned Apps to GWL for user: $CINN_OWNER"
        echo
        mkdir -p "$CINN_SETTINGS/configs/grouped-window-list@cinnamon.org"
        # copy ITM to GWL, preserving date/time
        cp -p $ITM_FILE $GWL_FILE
        chown -R $CINN_OWNER:$CINN_OWNER $CINN_SETTINGS
    fi

    # remove local configs of applets needing reset
    rm -rf $CINN_SETTINGS/configs/menu@cinnamon.org
done

# re-run wasta-layout-system to ensure updates applied

LAYOUT_OPTION="default"
if [ -L /usr/share/glib-2.0/schemas/z_15_wasta-layout-redmond7.gschema.override ];
then
    LAYOUT_OPTION=redmond7
elif [ -L /usr/share/glib-2.0/schemas/z_15_wasta-layout-unity.gschema.override ];
then
    LAYOUT_OPTION=unity
elif [ -L /usr/share/glib-2.0/schemas/z_15_wasta-layout-cupertino.gschema.override ];
then
    LAYOUT_OPTION=cupertino
fi

echo
echo "*** Running wasta-layout-system to re-apply options for layout: $LAYOUT_OPTION"
echo
wasta-layout-system $LAYOUT_OPTION

# need to restart cinnamon here for the current user for a polished experience (but I think a reboot will take care of it)
CINN_ACTIVE=$(wmctrl -m | grep -i muffin)
if [ "$CINN_ACTIVE" ];
then
    echo
    echo "*** Restarting Cinnamon"
    echo
    nohup cinnamon --replace &> /dev/null &
fi

# ------------------------------------------------------------------------------
# installing thunar to use as bulk rename tool in nemo
# ------------------------------------------------------------------------------
$DEBIAN_NONINTERACTIVE apt-get $YES install --no-install-recommends \
    thunar thunar-media-tags-plugin

# ------------------------------------------------------------------------------
# Finished
# ------------------------------------------------------------------------------
echo
echo "========================================================================="
echo "=== Script Finished ====================================================="
echo "========================================================================="

exit 0
